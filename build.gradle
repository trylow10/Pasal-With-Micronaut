plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.5.3"
}

version = "0.1"
group = "com.trilochan.mn"

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    // For Lombok
    implementation 'org.projectlombok:lombok:1.18.24'
    annotationProcessor('org.projectlombok:lombok:1.18.24')

    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
//    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")
//    implementation group: 'io.micronaut.data', name: 'micronaut-data-model', version: '3.8.0'
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")

    //  hibernate data handling
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    runtimeOnly("com.h2database:h2")
    annotationProcessor('io.micronaut.data:micronaut-data-processor')

//    implementation('jakarta.persistence:jakarta.persistence-api:3.1.0')

    // For postgres
    runtimeOnly("org.postgresql:postgresql")


}


application {
    mainClass.set("com.trilochan.mn.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.trilochan.mn.*")
    }
}



